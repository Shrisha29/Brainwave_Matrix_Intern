import java.util.*;

// Main Driver Class
public class HospitalManagementSystem {
    public static void main(String[] args) {
        System.out.println("Welcome to the Hospital Management System!");

        // Create instances of different modules
        Patient patient = new Patient("John Doe", 25, "Male", "123 Main St");
        Doctor doctor = new Doctor("Dr. Smith", "Cardiologist");
        Appointment appointment = new Appointment(patient, doctor, "2025-04-15 10:00");
        Billing billing = new Billing(patient);
        Inventory inventory = new Inventory();
        StaffManagement staffManagement = new StaffManagement();

        // Adding staff to the system
        Staff nurse = new Staff("Jane Doe", "Nurse", "Cardiology");
        Staff admin = new Staff("Emily Clark", "Administrator", "HR");
        staffManagement.addStaff(nurse);
        staffManagement.addStaff(admin);

        // Demonstrating the hospital system
        patient.displayInfo();
        doctor.displayInfo();
        appointment.scheduleAppointment();
        billing.generateInvoice();
        inventory.displayInventory();
        staffManagement.displayStaffInfo();
    }
}

// Patient Class
class Patient {
    private String name;
    private int age;
    private String gender;
    private String address;

    public Patient(String name, int age, String gender, String address) {
        this.name = name;
        this.age = age;
        this.gender = gender;
        this.address = address;
    }

    public String getName() {
        return name;
    }

    public void displayInfo() {
        System.out.println("Patient Name: " + name);
        System.out.println("Age: " + age);
        System.out.println("Gender: " + gender);
        System.out.println("Address: " + address);
    }
}

// Doctor Class
class Doctor {
    private String name;
    private String specialty;

    public Doctor(String name, String specialty) {
        this.name = name;
        this.specialty = specialty;
    }

    public String getName() {
        return name;
    }

    public void displayInfo() {
        System.out.println("Doctor Name: " + name);
        System.out.println("Specialty: " + specialty);
    }
}

// Appointment Class
class Appointment {
    private Patient patient;
    private Doctor doctor;
    private String appointmentDateTime;

    public Appointment(Patient patient, Doctor doctor, String appointmentDateTime) {
        this.patient = patient;
        this.doctor = doctor;
        this.appointmentDateTime = appointmentDateTime;
    }

    public void scheduleAppointment() {
        System.out.println("Appointment Scheduled:");
        System.out.println("Patient: " + patient.getName());
        System.out.println("Doctor: " + doctor.getName());
        System.out.println("Date and Time: " + appointmentDateTime);
    }
}

// Billing Class
class Billing {
    private Patient patient;

    public Billing(Patient patient) {
        this.patient = patient;
    }

    public void generateInvoice() {
        System.out.println("Generating invoice for " + patient.getName());
        // Dummy values for the sake of example
        double consultationFee = 100.0;
        double medicationCost = 50.0;
        double totalAmount = consultationFee + medicationCost;

        System.out.println("Consultation Fee: $" + consultationFee);
        System.out.println("Medication Cost: $" + medicationCost);
        System.out.println("Total Amount: $" + totalAmount);
    }
}

// Inventory Class
class Inventory {
    private Map<String, Integer> supplies;

    public Inventory() {
        supplies = new HashMap<>();
        supplies.put("Bandages", 100);
        supplies.put("Syringes", 200);
        supplies.put("Antibiotics", 50);
    }

    public void updateInventory(String item, int quantity) {
        supplies.put(item, supplies.getOrDefault(item, 0) + quantity);
        System.out.println("Updated inventory: " + item + " - " + supplies.get(item));
    }

    public void displayInventory() {
        System.out.println("Inventory:");
        for (Map.Entry<String, Integer> entry : supplies.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }
}

// Staff Class
class Staff {
    private String name;
    private String role;
    private String department;

    public Staff(String name, String role, String department) {
        this.name = name;
        this.role = role;
        this.department = department;
    }

    public void displayInfo() {
        System.out.println("Staff Name: " + name);
        System.out.println("Role: " + role);
        System.out.println("Department: " + department);
    }
}

// StaffManagement Class
class StaffManagement {
    private List<Staff> staffList;

    public StaffManagement() {
        staffList = new ArrayList<>();
    }

    public void addStaff(Staff staff) {
        staffList.add(staff);
    }

    public void displayStaffInfo() {
        System.out.println("Staff List:");
        for (Staff staff : staffList) {
            staff.displayInfo();
        }
    }
}
